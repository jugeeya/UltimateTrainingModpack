var $jscomp = $jscomp || {}; $jscomp.scope = {}; $jscomp.ASSUME_ES5 = !1; $jscomp.ASSUME_NO_NATIVE_MAP = !1; $jscomp.ASSUME_NO_NATIVE_SET = !1; $jscomp.defineProperty = $jscomp.ASSUME_ES5 || "function" == typeof Object.defineProperties ? Object.defineProperty : function (a, c, b) { a != Array.prototype && a != Object.prototype && (a[c] = b.value) }; $jscomp.getGlobal = function (a) { return "undefined" != typeof window && window === a ? a : "undefined" != typeof global && null != global ? global : a }; $jscomp.global = $jscomp.getGlobal(this); $jscomp.SYMBOL_PREFIX = "jscomp_symbol_";
$jscomp.initSymbol = function () { $jscomp.initSymbol = function () { }; $jscomp.global.Symbol || ($jscomp.global.Symbol = $jscomp.Symbol) }; $jscomp.symbolCounter_ = 0; $jscomp.Symbol = function (a) { return $jscomp.SYMBOL_PREFIX + (a || "") + $jscomp.symbolCounter_++ };
$jscomp.initSymbolIterator = function () { $jscomp.initSymbol(); var a = $jscomp.global.Symbol.iterator; a || (a = $jscomp.global.Symbol.iterator = $jscomp.global.Symbol("iterator")); "function" != typeof Array.prototype[a] && $jscomp.defineProperty(Array.prototype, a, { configurable: !0, writable: !0, value: function () { return $jscomp.arrayIterator(this) } }); $jscomp.initSymbolIterator = function () { } }; $jscomp.arrayIterator = function (a) { var c = 0; return $jscomp.iteratorPrototype(function () { return c < a.length ? { done: !1, value: a[c++] } : { done: !0 } }) };
$jscomp.iteratorPrototype = function (a) { $jscomp.initSymbolIterator(); a = { next: a }; a[$jscomp.global.Symbol.iterator] = function () { return this }; return a }; $jscomp.iteratorFromArray = function (a, c) { $jscomp.initSymbolIterator(); a instanceof String && (a += ""); var b = 0, e = { next: function () { if (b < a.length) { var d = b++; return { value: c(d, a[d]), done: !1 } } e.next = function () { return { done: !0, value: void 0 } }; return e.next() } }; e[Symbol.iterator] = function () { return e }; return e };
$jscomp.polyfill = function (a, c, b, e) { if (c) { b = $jscomp.global; a = a.split("."); for (e = 0; e < a.length - 1; e++) { var d = a[e]; d in b || (b[d] = {}); b = b[d] } a = a[a.length - 1]; e = b[a]; c = c(e); c != e && null != c && $jscomp.defineProperty(b, a, { configurable: !0, writable: !0, value: c }) } }; $jscomp.polyfill("Array.prototype.keys", function (a) { return a ? a : function () { return $jscomp.iteratorFromArray(this, function (a) { return a }) } }, "es6-impl", "es3");
(function () {
    var a = function () { this.audioContext_ = new (window.AudioContext || window.webkitAudioContext); this.buffers_ = {}; this.playingCount_ = 0; this.onAllEnded_ = null; this.playingList_ = {}; this.isLoading_ = !1; this.suspendedCallbackList_ = []; this.resumedCallbackList_ = []; var a = this; this.audioContext_.onstatechange = function () { a.onStateChange_() } }; a.prototype.load = function (a, b) { this.isLoading_ || (this.isLoading_ = !0, this.loadingHash_ = a, this.onLoadEnd_ = b, this.loadImpl_()) }; a.prototype.play = function (a, b) {
        if (this.buffers_[a]) {
            var c =
                this.audioContext_.createBufferSource(); c.buffer = this.buffers_[a]; c.connect(this.audioContext_.destination); this.playingList_[a].push(c); var d = this; d.playingCount_++; c.onended = function () { d.playingCount_--; d.playingList_[a].shift(); b && b(); if (0 === d.playingCount_ && d.onAllEnded_) d.onAllEnded_() }; c.start(0)
        }
    }; a.prototype.playThenSuspend = function (a, b) { this.play(a, function () { wsnd.suspend(function () { b && b() }) }) }; a.prototype.setOnAllEndedCallback = function (a) { this.onAllEnded_ = a }; a.prototype.suspend = function (a) {
        this.audioContext_.suspend();
        a && (this.suspendedCallbackList_.push(a), this.onStateChange_())
    }; a.prototype.resume = function (a) { this.audioContext_.resume(); a && (this.resumedCallbackList_.push(a), this.onStateChange_()) }; a.prototype.getState = function () { return this.audioContext_.state }; a.prototype.getSec = function (a) { return this.buffers_[a] ? this.buffers_[a].duration : 0 }; a.prototype.loadImpl_ = function () {
        if (0 >= Object.keys(this.loadingHash_).length) { if (this.isLoading_ = !1, this.onLoadEnd_) this.onLoadEnd_() } else {
            var a = Object.keys(this.loadingHash_)[0],
            b = this.loadingHash_[a]; delete this.loadingHash_[a]; var e = this, d = new XMLHttpRequest; d.open("GET", b); d.responseType = "arraybuffer"; d.onloadend = function (c) { c = d.status; var b = d.response; d = null; 200 !== c && 0 !== c || null === b || 0 === b.byteLength ? e.loadImpl_() : e.audioContext_.decodeAudioData(b, function (c) { e.buffers_[a] = c; e.playingList_[a] = []; e.loadImpl_() }, function () { e.loadImpl_() }) }; d.send()
        }
    }; a.prototype.onStateChange_ = function () {
        var a = null; switch (this.audioContext_.state) {
            case "running": a = this.resumedCallbackList_;
                break; case "suspended": a = this.suspendedCallbackList_
        }if (null !== a) for (; 0 < a.length;)a.shift()()
    }; window.wsnd = new a
})();
